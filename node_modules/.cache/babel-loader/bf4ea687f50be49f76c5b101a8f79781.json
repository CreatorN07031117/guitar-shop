{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imail\\\\Desktop\\\\Projects\\\\guitar-shop\\\\src\\\\components\\\\guitar-page\\\\components\\\\comments\\\\comments.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../../../hooks/hooks';\nimport { COMMENTS_ON_PAGE } from '../../../../const';\nimport CommentItem from '../comment-item/comment-item';\nimport NewCommentPopup from '../new-comment-popup/new-comment-popup';\nimport SuccessCommentAddPopup from '../success-comment-add-popup/success-comment-add-popup';\nimport { sortCommentsByData } from '../../../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CommentsList() {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const {\n    guitar\n  } = useAppSelector(_ref => {\n    let {\n      PRODUCT\n    } = _ref;\n    return PRODUCT;\n  });\n  const {\n    comments\n  } = useAppSelector(_ref2 => {\n    let {\n      PRODUCT\n    } = _ref2;\n    return PRODUCT;\n  });\n  comments.slice().sort(sortCommentsByData);\n  const [showComments, setShowComments] = useState({\n    comments: comments,\n    list: comments.slice(0, COMMENTS_ON_PAGE),\n    counter: COMMENTS_ON_PAGE\n  });\n  const [newComment, setNewComment] = useState(false);\n  const [successAddComment, setSuccessAddComment] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"reviews\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"reviews__title title title--bigger\",\n        children: \"\\u041E\\u0442\\u0437\\u044B\\u0432\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"button button--red-border button--big reviews__sumbit-button\",\n        onClick: () => {\n          setNewComment(true);\n        },\n        children: \"\\u041E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0437\\u044B\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), showComments.list.map(item => /*#__PURE__*/_jsxDEV(CommentItem, {\n        comment: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)), showComments.counter < showComments.comments.length && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button--medium reviews__more-button\",\n        onClick: evt => {\n          evt.preventDefault();\n          setShowComments(prevShowComments => ({ ...prevShowComments,\n            list: showComments.comments.slice(0, showComments.counter + COMMENTS_ON_PAGE),\n            counter: showComments.counter + COMMENTS_ON_PAGE\n          }));\n        },\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0435\\u0449\\u0435 \\u043E\\u0442\\u0437\\u044B\\u0432\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), comments.length > 0 && /*#__PURE__*/_jsxDEV(\"a\", {\n        style: {\n          zIndex: '1'\n        },\n        className: \"button button--up button--red-border button--big reviews__up-button\",\n        href: \"#header\",\n        children: \"\\u041D\\u0430\\u0432\\u0435\\u0440\\u0445\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), newComment && /*#__PURE__*/_jsxDEV(NewCommentPopup, {\n      guitarName: guitar.name,\n      id: guitar.id,\n      onNewComment: value => setNewComment(value),\n      onSuccessComment: value => setSuccessAddComment(value),\n      onAddComment: item => {\n        const newCommentsList = Object.assign([], showComments.comments);\n        console.log(comments);\n        newCommentsList.push(item);\n        setShowComments(prevState => ({ ...prevState,\n          list: newCommentsList.sort(sortCommentsByData).slice(0, showComments.counter),\n          comments: newCommentsList.sort(sortCommentsByData)\n        }));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), successAddComment && /*#__PURE__*/_jsxDEV(SuccessCommentAddPopup, {\n      onSuccessComment: value => {\n        setSuccessAddComment(value);\n      },\n      id: guitar.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CommentsList, \"UP1qnl8ZoZJYKlW5ltSYhtZvHtQ=\", false, function () {\n  return [useAppDispatch, useAppSelector, useAppSelector];\n});\n\n_c = CommentsList;\nexport default CommentsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsList\");","map":{"version":3,"sources":["C:/Users/imail/Desktop/Projects/guitar-shop/src/components/guitar-page/components/comments/comments.tsx"],"names":["useState","useAppSelector","useAppDispatch","COMMENTS_ON_PAGE","CommentItem","NewCommentPopup","SuccessCommentAddPopup","sortCommentsByData","CommentsList","dispatch","guitar","PRODUCT","comments","slice","sort","showComments","setShowComments","list","counter","newComment","setNewComment","successAddComment","setSuccessAddComment","map","item","id","length","evt","preventDefault","prevShowComments","zIndex","name","value","newCommentsList","Object","assign","console","log","push","prevState"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,cAAR,EAAwBC,cAAxB,QAA6C,yBAA7C;AACA,SAAQC,gBAAR,QAA+B,mBAA/B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,OAAOC,sBAAP,MAAmC,wDAAnC;AAEA,SAAQC,kBAAR,QAAiC,mBAAjC;;;;AAGA,SAASC,YAAT,GAAsC;AAAA;;AACpC,QAAMC,QAAQ,GAAGP,cAAc,EAA/B;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAWT,cAAc,CAAC;AAAA,QAAC;AAACU,MAAAA;AAAD,KAAD;AAAA,WAAeA,OAAf;AAAA,GAAD,CAA/B;AACA,QAAM;AAACC,IAAAA;AAAD,MAAaX,cAAc,CAAC;AAAA,QAAC;AAACU,MAAAA;AAAD,KAAD;AAAA,WAAeA,OAAf;AAAA,GAAD,CAAjC;AAEAC,EAAAA,QAAQ,CAACC,KAAT,GAAiBC,IAAjB,CAAsBP,kBAAtB;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAE;AAChDY,IAAAA,QAAQ,EAAEA,QADsC;AAEhDK,IAAAA,IAAI,EAAEL,QAAQ,CAACC,KAAT,CAAe,CAAf,EAAkBV,gBAAlB,CAF0C;AAGhDe,IAAAA,OAAO,EAAEf;AAHuC,GAAF,CAAhD;AAMA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAY,KAAZ,CAA5C;AACA,QAAM,CAACqB,iBAAD,EAAoBC,oBAApB,IAA4CtB,QAAQ,CAAY,KAAZ,CAA1D;AAGA,sBACE;AAAA,4BACE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAC,8DADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACboB,UAAAA,aAAa,CAAC,IAAD,CAAb;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAUGL,YAAY,CAACE,IAAb,CAAkBM,GAAlB,CAAuBC,IAAD,iBACrB,QAAC,WAAD;AAA2B,QAAA,OAAO,EAAEA;AAApC,SAAkBA,IAAI,CAACC,EAAvB;AAAA;AAAA;AAAA;AAAA,cADD,CAVH,EAaGV,YAAY,CAACG,OAAb,GAAuBH,YAAY,CAACH,QAAb,CAAsBc,MAA7C,iBACD;AACE,QAAA,SAAS,EAAC,4CADZ;AAEE,QAAA,OAAO,EAAGC,GAAD,IAAS;AAChBA,UAAAA,GAAG,CAACC,cAAJ;AACAZ,UAAAA,eAAe,CAAEa,gBAAD,KAAsB,EACpC,GAAGA,gBADiC;AAEpCZ,YAAAA,IAAI,EAAEF,YAAY,CAACH,QAAb,CAAsBC,KAAtB,CAA4B,CAA5B,EAA+BE,YAAY,CAACG,OAAb,GAAsBf,gBAArD,CAF8B;AAGpCe,YAAAA,OAAO,EAAEH,YAAY,CAACG,OAAb,GAAwBf;AAHG,WAAtB,CAAD,CAAf;AAKD,SATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,EA2BIS,QAAQ,CAACc,MAAT,GAAkB,CAAnB,iBAA0B;AAAG,QAAA,KAAK,EAAE;AAACI,UAAAA,MAAM,EAAE;AAAT,SAAV;AAAyB,QAAA,SAAS,EAAC,qEAAnC;AAAyG,QAAA,IAAI,EAAC,SAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3B7B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EA8BGX,UAAU,iBACX,QAAC,eAAD;AACE,MAAA,UAAU,EAAET,MAAM,CAACqB,IADrB;AAEE,MAAA,EAAE,EAAErB,MAAM,CAACe,EAFb;AAGE,MAAA,YAAY,EAAGO,KAAD,IAAmBZ,aAAa,CAACY,KAAD,CAHhD;AAIE,MAAA,gBAAgB,EAAGA,KAAD,IAAmBV,oBAAoB,CAACU,KAAD,CAJ3D;AAKE,MAAA,YAAY,EAAGR,IAAD,IAAU;AACtB,cAAMS,eAAe,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBpB,YAAY,CAACH,QAA/B,CAAxB;AAEAwB,QAAAA,OAAO,CAACC,GAAR,CAAYzB,QAAZ;AACAqB,QAAAA,eAAe,CAACK,IAAhB,CAAqBd,IAArB;AACAR,QAAAA,eAAe,CAAEuB,SAAD,KACd,EAAC,GAAGA,SAAJ;AACEtB,UAAAA,IAAI,EAAEgB,eAAe,CAACnB,IAAhB,CAAqBP,kBAArB,EAAyCM,KAAzC,CAA+C,CAA/C,EAAkDE,YAAY,CAACG,OAA/D,CADR;AAEEN,UAAAA,QAAQ,EAAEqB,eAAe,CAACnB,IAAhB,CAAqBP,kBAArB;AAFZ,SADc,CAAD,CAAf;AAMD;AAhBH;AAAA;AAAA;AAAA;AAAA,YA/BF,EAkDGc,iBAAiB,iBAClB,QAAC,sBAAD;AACE,MAAA,gBAAgB,EAAGW,KAAD,IAAmB;AACnCV,QAAAA,oBAAoB,CAACU,KAAD,CAApB;AACD,OAHH;AAIE,MAAA,EAAE,EAAEtB,MAAM,CAACe;AAJb;AAAA;AAAA;AAAA;AAAA,YAnDF;AAAA,kBADF;AA4DD;;GA5EQjB,Y;UACUN,c,EACAD,c,EACEA,c;;;KAHZO,Y;AA8ET,eAAeA,YAAf","sourcesContent":["import {useState} from 'react';\r\nimport {useAppSelector, useAppDispatch} from '../../../../hooks/hooks';\r\nimport {COMMENTS_ON_PAGE} from '../../../../const';\r\nimport CommentItem from '../comment-item/comment-item';\r\nimport NewCommentPopup from '../new-comment-popup/new-comment-popup';\r\nimport SuccessCommentAddPopup from '../success-comment-add-popup/success-comment-add-popup';\r\nimport {getComments} from '../../../../store/product-process/product-process';\r\nimport {sortCommentsByData} from '../../../../utils';\r\n\r\n\r\nfunction CommentsList (): JSX.Element {\r\n  const dispatch = useAppDispatch();\r\n  const {guitar} = useAppSelector(({PRODUCT}) => PRODUCT);\r\n  const {comments} = useAppSelector(({PRODUCT}) => PRODUCT);\r\n\r\n  comments.slice().sort(sortCommentsByData);\r\n  const [showComments, setShowComments] = useState ({\r\n    comments: comments,\r\n    list: comments.slice(0, COMMENTS_ON_PAGE),\r\n    counter: COMMENTS_ON_PAGE,\r\n  });\r\n\r\n  const [newComment, setNewComment] = useState <boolean> (false);\r\n  const [successAddComment, setSuccessAddComment] = useState <boolean> (false);\r\n\r\n\r\n  return (\r\n    <>\r\n      <section className=\"reviews\">\r\n        <h3 className=\"reviews__title title title--bigger\">Отзывы</h3>\r\n        <span\r\n          className=\"button button--red-border button--big reviews__sumbit-button\"\r\n          onClick={() => {\r\n            setNewComment(true);\r\n          }}\r\n        >\r\n          Оставить отзыв\r\n        </span>\r\n        {showComments.list.map((item) =>(\r\n          <CommentItem key={item.id} comment={item} />\r\n        ))}\r\n        {showComments.counter < showComments.comments.length &&\r\n        <button\r\n          className=\"button button--medium reviews__more-button\"\r\n          onClick={(evt) => {\r\n            evt.preventDefault();\r\n            setShowComments((prevShowComments) =>({\r\n              ...prevShowComments,\r\n              list: showComments.comments.slice(0, showComments.counter+ COMMENTS_ON_PAGE),\r\n              counter: showComments.counter +  COMMENTS_ON_PAGE,\r\n            }));\r\n          }}\r\n        >\r\n        Показать еще отзывы\r\n        </button>}\r\n        {(comments.length > 0) && (<a style={{zIndex: '1'}} className=\"button button--up button--red-border button--big reviews__up-button\" href=\"#header\">Наверх</a>)}\r\n      </section>\r\n      {newComment &&\r\n      <NewCommentPopup\r\n        guitarName={guitar.name}\r\n        id={guitar.id as number}\r\n        onNewComment={(value:boolean) => setNewComment(value)}\r\n        onSuccessComment={(value:boolean) => setSuccessAddComment(value)}\r\n        onAddComment={(item) => {\r\n          const newCommentsList = Object.assign([], showComments.comments);\r\n         \r\n          console.log(comments)\r\n          newCommentsList.push(item);\r\n          setShowComments((prevState) => (\r\n            {...prevState,\r\n              list: newCommentsList.sort(sortCommentsByData).slice(0, showComments.counter),\r\n              comments: newCommentsList.sort(sortCommentsByData),\r\n            }\r\n          ));\r\n        }}\r\n\r\n      />}\r\n      {successAddComment &&\r\n      <SuccessCommentAddPopup\r\n        onSuccessComment={(value:boolean) => {\r\n          setSuccessAddComment(value);\r\n        }}\r\n        id={guitar.id}\r\n      />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CommentsList;\r\n"]},"metadata":{},"sourceType":"module"}