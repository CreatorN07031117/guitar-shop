{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { APIRoute } from '../const';\nimport { loadGuitars } from './catalog-process/catalog-process';\nimport { errorHandle } from '../services/error-handle';\nexport const fetchGuitarsActions = createAsyncThunk('data/fetchGuitars', async (_arg, _ref) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref;\n\n  try {\n    const {\n      data\n    } = await api.get(APIRoute.Guitars);\n    dispatch(loadGuitars(data));\n  } catch (error) {\n    errorHandle(error);\n  }\n});","map":{"version":3,"sources":["C:/Users/imail/Desktop/Projects/guitar-shop/src/store/api-actions.ts"],"names":["createAsyncThunk","APIRoute","loadGuitars","errorHandle","fetchGuitarsActions","_arg","dispatch","extra","api","data","get","Guitars","error"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AAGA,SAASC,QAAT,QAAyB,UAAzB;AAEA,SAASC,WAAT,QAA4B,mCAA5B;AAEA,SAASC,WAAT,QAA4B,0BAA5B;AAGA,OAAO,MAAMC,mBAAmB,GAChCJ,gBAAgB,CAKd,mBALc,EAMd,OAAOK,IAAP,WAAwC;AAAA,MAA3B;AAACC,IAAAA,QAAD;AAAWC,IAAAA,KAAK,EAAEC;AAAlB,GAA2B;;AACtC,MAAI;AACF,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMD,GAAG,CAACE,GAAJ,CAAiBT,QAAQ,CAACU,OAA1B,CAArB;AACAL,IAAAA,QAAQ,CAACJ,WAAW,CAACO,IAAD,CAAZ,CAAR;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACdT,IAAAA,WAAW,CAACS,KAAD,CAAX;AACD;AACF,CAba,CADT","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { AxiosInstance } from 'axios';\r\nimport { AppDispatch, State } from '../types/store-types';\r\nimport { APIRoute } from '../const';\r\nimport { Guitar, Guitars } from '../types/data-types';\r\nimport { loadGuitars } from './catalog-process/catalog-process';\r\nimport { redirectToRoute } from './actions';\r\nimport { errorHandle } from '../services/error-handle';\r\n\r\n\r\nexport const fetchGuitarsActions =\r\ncreateAsyncThunk <void, undefined, {\r\n  dispatch: AppDispatch,\r\n  state: State,\r\n  extra: AxiosInstance\r\n}>(\r\n  'data/fetchGuitars',\r\n  async (_arg, {dispatch, extra: api}) => {\r\n    try {\r\n      const {data} = await api.get<Guitars>(APIRoute.Guitars);\r\n      dispatch(loadGuitars(data));\r\n    } catch (error) {\r\n      errorHandle(error);\r\n    }\r\n  },\r\n);\r\n"]},"metadata":{},"sourceType":"module"}