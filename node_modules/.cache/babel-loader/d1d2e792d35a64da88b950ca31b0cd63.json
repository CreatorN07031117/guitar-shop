{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imail\\\\Desktop\\\\Projects\\\\guitar-shop\\\\src\\\\components\\\\guitar-page\\\\components\\\\comments\\\\comments.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useAppSelector } from '../../../../hooks/hooks';\nimport { COMMENTS_ON_PAGE } from '../../../../const';\nimport CommentItem from '../comment-item/comment-item';\nimport NewCommentPopup from '../new-comment-popup/new-comment-popup';\nimport SuccessCommentAddPopup from '../success-comment-add-popup/success-comment-add-popup';\nimport { getComments } from '../../../../store/product-process/product-process';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CommentsList() {\n  _s();\n\n  const {\n    guitar\n  } = useAppSelector(_ref => {\n    let {\n      PRODUCT\n    } = _ref;\n    return PRODUCT;\n  });\n  let {\n    comments\n  } = useAppSelector(_ref2 => {\n    let {\n      PRODUCT\n    } = _ref2;\n    return PRODUCT;\n  });\n  comments = comments.slice().sort((a, b) => {\n    const A = Number(new Date(a.createAt));\n    const B = Number(new Date(b.createAt));\n    return B - A;\n  });\n  const [showComments, setShowComments] = useState({\n    list: comments.slice(0, COMMENTS_ON_PAGE),\n    counter: COMMENTS_ON_PAGE\n  });\n  const allComments = comments.length;\n  const [newComment, setNewComment] = useState(false);\n  const [successAddComment, setSuccessAddComment] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"reviews\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"reviews__title title title--bigger\",\n        children: \"\\u041E\\u0442\\u0437\\u044B\\u0432\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"button button--red-border button--big reviews__sumbit-button\",\n        onClick: () => {\n          setNewComment(true);\n        },\n        children: \"\\u041E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0437\\u044B\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), showComments.list.map(item => /*#__PURE__*/_jsxDEV(CommentItem, {\n        comment: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)), showComments.counter < allComments && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button--medium reviews__more-button\",\n        onClick: evt => {\n          evt.preventDefault();\n          setShowComments({\n            list: comments.slice(0, showComments.counter + COMMENTS_ON_PAGE),\n            counter: showComments.counter + COMMENTS_ON_PAGE\n          });\n        },\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0435\\u0449\\u0435 \\u043E\\u0442\\u0437\\u044B\\u0432\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), comments.length > 0 && /*#__PURE__*/_jsxDEV(\"a\", {\n        style: {\n          zIndex: '1'\n        },\n        className: \"button button--up button--red-border button--big reviews__up-button\",\n        href: \"#header\",\n        children: \"\\u041D\\u0430\\u0432\\u0435\\u0440\\u0445\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), newComment && /*#__PURE__*/_jsxDEV(NewCommentPopup, {\n      guitarName: guitar.name,\n      id: guitar.id,\n      onNewComment: value => setNewComment(value),\n      onSuccessComment: value => setSuccessAddComment(value),\n      onAddComment: item => {\n        const newCommentList = Object.assign([item], comments);\n        newCommentList.slice(0, showComments.counter);\n        setShowComments(prevState => ({ ...prevState,\n          list: newCommentList\n        }));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), successAddComment && /*#__PURE__*/_jsxDEV(SuccessCommentAddPopup, {\n      onSuccessComment: value => {\n        setSuccessAddComment(value);\n        dispatch(getComments());\n      },\n      id: guitar.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CommentsList, \"Oyjh5WiSgReIAJVMEUXEaToTBQY=\", false, function () {\n  return [useAppSelector, useAppSelector];\n});\n\n_c = CommentsList;\nexport default CommentsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsList\");","map":{"version":3,"sources":["C:/Users/imail/Desktop/Projects/guitar-shop/src/components/guitar-page/components/comments/comments.tsx"],"names":["useState","useAppSelector","COMMENTS_ON_PAGE","CommentItem","NewCommentPopup","SuccessCommentAddPopup","getComments","CommentsList","guitar","PRODUCT","comments","slice","sort","a","b","A","Number","Date","createAt","B","showComments","setShowComments","list","counter","allComments","length","newComment","setNewComment","successAddComment","setSuccessAddComment","map","item","id","evt","preventDefault","zIndex","name","value","newCommentList","Object","assign","prevState","dispatch"],"mappings":"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","sourcesContent":["import {useState} from 'react';\r\nimport {useAppSelector} from '../../../../hooks/hooks';\r\nimport {COMMENTS_ON_PAGE} from '../../../../const';\r\nimport CommentItem from '../comment-item/comment-item';\r\nimport NewCommentPopup from '../new-comment-popup/new-comment-popup';\r\nimport SuccessCommentAddPopup from '../success-comment-add-popup/success-comment-add-popup';\r\nimport { getComments } from '../../../../store/product-process/product-process';\r\n\r\n\r\nfunction CommentsList (): JSX.Element {\r\n\r\n  const {guitar} = useAppSelector(({PRODUCT}) => PRODUCT);\r\n  let {comments} = useAppSelector(({PRODUCT}) => PRODUCT);\r\n\r\n  comments = comments.slice().sort((a, b) => {\r\n    const A = Number(new Date(a.createAt));\r\n    const B = Number(new Date(b.createAt));\r\n    return (B - A);\r\n  });\r\n\r\n  const [showComments, setShowComments] = useState ({\r\n    list: comments.slice(0, COMMENTS_ON_PAGE),\r\n    counter: COMMENTS_ON_PAGE,\r\n  });\r\n  const allComments = comments.length;\r\n\r\n  const [newComment, setNewComment] = useState <boolean> (false);\r\n  const [successAddComment, setSuccessAddComment] = useState <boolean> (false);\r\n\r\n\r\n  return (\r\n    <>\r\n      <section className=\"reviews\">\r\n        <h3 className=\"reviews__title title title--bigger\">Отзывы</h3>\r\n        <span\r\n          className=\"button button--red-border button--big reviews__sumbit-button\"\r\n          onClick={() => {\r\n            setNewComment(true);\r\n          }}\r\n        >\r\n          Оставить отзыв\r\n        </span>\r\n        {showComments.list.map((item) =>(\r\n          <CommentItem key={item.id} comment={item} />\r\n        ))}\r\n        {showComments.counter < allComments &&\r\n        <button\r\n          className=\"button button--medium reviews__more-button\"\r\n          onClick={(evt) => {\r\n            evt.preventDefault();\r\n            setShowComments({\r\n              list: comments.slice(0, showComments.counter+ COMMENTS_ON_PAGE),\r\n              counter: showComments.counter +  COMMENTS_ON_PAGE,\r\n            });\r\n          }}\r\n        >\r\n        Показать еще отзывы\r\n        </button>}\r\n        {(comments.length > 0) && (<a style={{zIndex: '1'}} className=\"button button--up button--red-border button--big reviews__up-button\" href=\"#header\">Наверх</a>)}\r\n      </section>\r\n      {newComment &&\r\n      <NewCommentPopup\r\n        guitarName={guitar.name}\r\n        id={guitar.id as number}\r\n        onNewComment={(value:boolean) => setNewComment(value)}\r\n        onSuccessComment={(value:boolean) => setSuccessAddComment(value)}\r\n        onAddComment={(item) => {\r\n          const newCommentList = Object.assign([item], comments);\r\n          newCommentList.slice(0, showComments.counter);\r\n          setShowComments((prevState) => ({...prevState, list: newCommentList}));\r\n\r\n        }}\r\n\r\n      />}\r\n      {successAddComment &&\r\n      <SuccessCommentAddPopup\r\n        onSuccessComment={(value:boolean) => {\r\n          setSuccessAddComment(value);\r\n          dispatch(getComments())\r\n        }}\r\n        id={guitar.id}\r\n      />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CommentsList;\r\n"]},"metadata":{},"sourceType":"module"}