{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { NameSpace } from '../../const';\nconst initialState = {\n  guitar: {},\n  isDataLoaded: false,\n  comments: []\n};\nexport const productProcess = createSlice({\n  name: NameSpace.Product,\n  initialState,\n  reducers: {\n    getGuitar: state => {\n      ({\n        guitar: state.guitar\n      } = state);\n    },\n    loadGuitar: (state, action) => {\n      state.guitar = action.payload;\n    },\n    getComments: state => {\n      ({\n        comments: state.comments\n      } = state);\n    },\n    loadComments: (state, action) => {\n      state.comments = action.payload;\n      state.isDataLoaded = true;\n    },\n    deleteComments: state => {}\n  }\n});\nexport const {\n  getGuitar,\n  loadGuitar,\n  getComments,\n  loadComments\n} = productProcess.actions;","map":{"version":3,"sources":["C:/Users/imail/Desktop/Projects/guitar-shop/src/store/product-process/product-process.ts"],"names":["createSlice","NameSpace","initialState","guitar","isDataLoaded","comments","productProcess","name","Product","reducers","getGuitar","state","loadGuitar","action","payload","getComments","loadComments","deleteComments","actions"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAGA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,MAAMC,YAA4B,GAAG;AACnCC,EAAAA,MAAM,EAAE,EAD2B;AAEnCC,EAAAA,YAAY,EAAE,KAFqB;AAGnCC,EAAAA,QAAQ,EAAE;AAHyB,CAArC;AAMA,OAAO,MAAMC,cAAc,GAAGN,WAAW,CAAC;AACxCO,EAAAA,IAAI,EAAEN,SAAS,CAACO,OADwB;AAExCN,EAAAA,YAFwC;AAGxCO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAGC,KAAD,IAAW;AACpB,OAAC;AAACR,QAAAA,MAAM,EAAEQ,KAAK,CAACR;AAAf,UAAyBQ,KAA1B;AACD,KAHO;AAIRC,IAAAA,UAAU,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC7BF,MAAAA,KAAK,CAACR,MAAN,GAAeU,MAAM,CAACC,OAAtB;AACD,KANO;AAORC,IAAAA,WAAW,EAAGJ,KAAD,IAAW;AACtB,OAAC;AAACN,QAAAA,QAAQ,EAAEM,KAAK,CAACN;AAAjB,UAA6BM,KAA9B;AACD,KATO;AAURK,IAAAA,YAAY,EAAE,CAACL,KAAD,EAAQE,MAAR,KAAkB;AAC9BF,MAAAA,KAAK,CAACN,QAAN,GAAiBQ,MAAM,CAACC,OAAxB;AACAH,MAAAA,KAAK,CAACP,YAAN,GAAqB,IAArB;AACD,KAbO;AAcRa,IAAAA,cAAc,EAAGN,KAAD,IAAW,CAE1B;AAhBO;AAH8B,CAAD,CAAlC;AAuBP,OAAO,MAAM;AAACD,EAAAA,SAAD;AAAYE,EAAAA,UAAZ;AAAwBG,EAAAA,WAAxB;AAAqCC,EAAAA;AAArC,IAAqDV,cAAc,CAACY,OAA1E","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\nimport {ProductProcess} from '../../types/store-types';\r\nimport {Guitar, Comments} from '../../types/data-types';\r\nimport {NameSpace} from '../../const';\r\n\r\n\r\nconst initialState: ProductProcess = {\r\n  guitar: {} as Guitar,\r\n  isDataLoaded: false,\r\n  comments: [] as Comments,\r\n};\r\n\r\nexport const productProcess = createSlice({\r\n  name: NameSpace.Product,\r\n  initialState,\r\n  reducers: {\r\n    getGuitar: (state) => {\r\n      ({guitar: state.guitar} = state);\r\n    },\r\n    loadGuitar: (state, action) => {\r\n      state.guitar = action.payload;\r\n    },\r\n    getComments: (state) => {\r\n      ({comments: state.comments} = state);\r\n    },\r\n    loadComments: (state, action) =>{\r\n      state.comments = action.payload;\r\n      state.isDataLoaded = true;\r\n    },\r\n    deleteComments: (state) => {\r\n\r\n    }\r\n  },\r\n});\r\n\r\nexport const {getGuitar, loadGuitar, getComments, loadComments} = productProcess.actions;\r\n"]},"metadata":{},"sourceType":"module"}